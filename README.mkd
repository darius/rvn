## summary

`rvn` is revision control for single files, written in bash, using diffutils.

It is very alpha and probably shouldn't be used. On the other hand, it does
seem to work.

By default, for `file`, rvn maintains `.rvn/file.rvn` in the same directory.
`rvn` works with this file, which is itself in the form of a shell script that
can be edited by hand, or executed with bash to recreate any revision of `file`:

    bash file.rvn outfile [revision]

## installation

    wget http://github.com/rupa/rvn/raw/master/rvn.rvn
    bash rvn.rvn rvn
    chmod +x rvn

## usage

    rvn d | h | i | l | o

    d|diff <file> [revision]
        diff of file with revision (default revision: head)
    h|help
        show this message
    i|ci|commit <file> [commit message]
        commit changes to file with commit message
    l|log <file> [revision]
        show a log of (specific) revisions and commit messages
    o|co|checkout <file> [revision]
        checkout revision to file.revision (default revision: head)

## configuration

`rvn` checks some environment variables:

    RVN_PRE
        override prefix for revision file.
        can be a string (with no slashes), or a directory (with trailing slash)
        default `".$(basename $0)/"` (a hidden dir named after the `rvn` script)
        examples: `"."`, `""`
        if a directory, you probably want a relative path.
    RVN_EXT
        override file extension for revision file.
        default: `"$(basename $0)"` (whatever the `rvn` script is named)

## submitting patches to this project

hahaha ... I'm sure you'll think of a good way to.
